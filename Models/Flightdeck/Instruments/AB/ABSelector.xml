<?xml version="1.0"?>
<PropertyList>

 <path>ABSelectorknob.ac</path>

   <animation>
    <type>material</type>
    <object-name>knob1.006</object-name>
    <emission>
<!--      <factor-prop>/systems/electrical/outputs/instrument-lights</factor-prop> -->
      <red>   0.3 </red>
      <green> 0.3 </green>
      <blue>  0.3 </blue>
    </emission>
  <condition>
    <or>
      <property>controls/electric/battery-switch</property>
      <property>controls/electric/external-power</property>
      <property>controls/electric/apugen1</property>
      <property>controls/electric/apugen2</property>
      <property>engines/engine[0]/running</property>
    </or>
  </condition>
  </animation>

 
 <animation>
  <type>rotate</type>
  <object-name>knob1.006</object-name>
  <property>/controls/gear/autobrakes</property>
    <interpolation>
	<entry><ind>	0</ind>	<dep>	-90</dep></entry>
        <entry><ind>	1</ind>	<dep>	-45</dep></entry>
        <entry><ind>	2</ind>	<dep>	0</dep></entry>
        <entry><ind>	3</ind>	<dep>	45</dep></entry>
        <entry><ind>	4</ind>	<dep>	90</dep></entry>
        <entry><ind>	5</ind>	<dep>	-135</dep></entry>
    </interpolation>
  <axis>
   <x>-1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>
 
  <animation>
  <type>pick</type>
  <visible>true</visible>
  <object-name>knob1.006</object-name>
  <action>
    <name>AutoBrake Selector</name>
   <button>0</button>
   <repeatable>false</repeatable>
	 <binding>
        	<command>property-cycle</command>
        	<property>/controls/gear/autobrakes</property>
        	<value>0</value>
        	<value>1</value>
        	<value>2</value>
        	<value>3</value>
        	<value>4</value>
        	<value>5</value>
   </binding> 
   <binding>
    <command>nasal</command>
          <script>
          	var setting = getprop ("/controls/gear/autobrakes");
		        var names = ["Off", "Level 1", "Level 2", "Level 3", "Maximum", "RTO"];
						if (getprop("sim/co-pilot")) {
		          setprop ("/sim/messages/copilot", "Autobrakes set to " ~ names[setting] ~ ".");
            }
	        </script>
   </binding>
  </action>
 </animation>

  <animation>
  <type>pick</type>
  <visible>true</visible>
  <object-name>knob1.006</object-name>
  <action>
    <name>AutoBrake Selector</name>
   <button>3</button>
   <repeatable>false</repeatable>
   <binding>
    <command>nasal</command>
          <script>
          	var setting = getprop ("/controls/gear/autobrakes");
		if (setting == 5) {
			setting = 0;
		} elsif (setting == 4) {
		} else {
			setting += 1;
		}
		setprop ("/controls/gear/autobrakes", setting);

		var names = ["Off", "Level 1", "Level 2", "Level 3", "Maximum", "RTO"];
		if (getprop("sim/co-pilot")) setprop ("/sim/messages/copilot", "Autobrakes set to " ~ names[setting] ~ ".");
	        </script>
   </binding>
  </action>
 </animation>

  <animation>
  <type>pick</type>
  <visible>true</visible>
  <object-name>knob1.006</object-name>
  <action>
    <name>AutoBrake Selector</name>
   <button>4</button>
   <repeatable>false</repeatable>
   <binding>
    <command>nasal</command>
          <script>
          	var setting = getprop ("/controls/gear/autobrakes");
		if (setting == 5) {
		} elsif (setting == 0) {
			setting = 5;
		} else {
			setting -= 1;
		}
		setprop ("/controls/gear/autobrakes", setting);

		var names = ["Off", "Level 1", "Level 2", "Level 3", "Maximum", "RTO"];
		if (getprop("sim/co-pilot")) setprop ("/sim/messages/copilot", "Autobrakes set to " ~ names[setting] ~ ".");
	        </script>
   </binding>
  </action>
 </animation>
 
 </PropertyList>
